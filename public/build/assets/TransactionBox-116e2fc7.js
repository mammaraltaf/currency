import{_ as V}from"./FiftyText-6848784f.js";import{u as h}from"./useAPI-162a5f74.js";import{_ as p}from"./NewTextInput-ecde88cf.js";import{_ as B}from"./NewSelectInput-67f8f5a4.js";import{N}from"./NewActionButton-f21ab536.js";import{k as v,K as q,r as f,c as k,a as n,w,b as D,u as c,o as F,g as L}from"./app-dde26467.js";import{u as R}from"./notification-8eb2a074.js";import{c as T}from"./currencies_countries-fbccd8be.js";import"./Spinner-b5a8aca4.js";/* empty css                                                *//* empty css                                                     */import"./_plugin-vue_export-helper-c27b6911.js";const U={class:"transaction-box-container"},$={class:"inputs"},E={name:"TransactionBox"},Q=Object.assign(E,{props:{receivingCountries:{required:!0,default:[],type:Array}},setup(i){const y=i,A=h(),g=R(),t=v({}),e=v({amount:null,country:null,convertedAmount:null}),l=q().props.geoDetails,u=f(!1),s=f(0),_=async()=>{u.value=!0;const a=y.receivingCountries.find(o=>o.code_iso_2===e.country||o.code===e.country);try{const o=await axios.post("/api/convert-currency",{baseCurrency:l.country.currency.code,requiredCurrency:a.currency.code});console.log({res:o}),s.value=o==null?void 0:o.data[a.currency.code].value,e.convertedAmount=m()}catch{g.notify("Exchange rate is not available at the moment..","error")}finally{u.value=!1}},b=()=>{if(t.amount=[],e.amount>=1e5)return e.amount=1e5,t.amount=["100,000 is the maximum amount"];e.convertedAmount=m()},C=()=>{if(t.convertedAmount=[],e.convertedAmount>=1e5)return e.convertedAmount=1e5,t.convertedAmount=["100,000 is the maximum amount"];e.amount=x()},m=()=>parseFloat((s.value*e.amount).toFixed(2)),x=()=>parseFloat((e.convertedAmount/s.value).toFixed(2));return(a,o)=>{var d;return F(),k("div",U,[n(V,{color:"dark",variation:"body-bold"},{default:w(()=>[L(" Provide Your Transaction Details ")]),_:1}),D("div",$,[n(p,{modelValue:e.amount,"onUpdate:modelValue":[o[0]||(o[0]=r=>e.amount=r),b],errors:t.amount,info:c(l).country.currency.code,label:"Your amount",placeholder:"Amount to send",max:1e5,min:10,required:"",type:"number",title:"amount"},null,8,["modelValue","errors","info"]),n(B,{modelValue:e.country,"onUpdate:modelValue":[o[1]||(o[1]=r=>e.country=r),_],disabled:!1,errors:(d=c(A).errors.value)==null?void 0:d.country,options:i.receivingCountries,label:"Receiver Country","label-accessor":"label",placeholder:"Country",required:"",title:"country",type:"text","value-accessor":"code_iso_2"},null,8,["modelValue","errors","options"]),n(p,{errors:t.convertedAmount,modelValue:e.convertedAmount,"onUpdate:modelValue":[o[2]||(o[2]=r=>e.convertedAmount=r),C],info:c(T)[e.country]??"",isLoading:u.value,label:"Receiver gets",placeholder:"Amount received",required:"",max:1e5,min:10,type:"number",title:"convertedAmount"},null,8,["errors","modelValue","info","isLoading"]),n(N,{url:a.route("user.info.page"),class:"custom-action-btn",title:"Get Started"},null,8,["url"])])])}}});export{Q as default};
